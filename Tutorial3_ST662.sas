PROC FREQ DATA=EBP_IRIS;
TABLE 	Sepal_Width
		Petal_Width
/MISSING;
QUIT;


/* Introducing PROC RANK =========================================================================== */
PROC RANK DATA=ST662LIB.EBP_IRIS OUT=ST662LIB.EBP_IRIS GROUPS=10;
	RANKS PETAL_RANK;
	VAR PETAL_LENGTH;
QUIT;

/*Creating a macro variable with the number of observations (lines) of the dataset*/
DATA _NULL_; SET ST662LIB.EBP_IRIS;
	CALL SYMPUT('TOT_AUX',_N_);
RUN;

/*Showing the macro variable in the log*/
%PUT TOT_AUX = &TOT_AUX.;

/*Grouping by the RANKS (PETAL_RANK) generated by PROC RANK*/
PROC SQL;
	CREATE TABLE WORK.EBP_IRIS_DESC_STATS_PROC_RANK AS SELECT
		PETAL_RANK 				AS RANK,
		MIN(PETAL_LENGTH) 		AS MIN_PETAL_RANK,
		MAX(PETAL_LENGTH) 		AS MAX_PETAL_RANK,
		MEAN(PETAL_LENGTH) 		AS MEAN_PETAL_RANK,
		COUNT(*) 				AS OBS,
		CALCULATED OBS/&TOT_AUX AS PC_OBS FORMAT=PERCENT18.2
	FROM ST662LIB.EBP_IRIS
	GROUP BY 1;
QUIT;

/*Introducing MACRO to automate the process of screening and cleaning the data ======================= */

/*Deleting the dataset, when it exists*/
%_eg_conditional_dropds(EBP_APPEND_DESC_STATS);

%MACRO DESC_STATS_WITH_PROC_RANK (DATASET, VAR, GROUPS);

%IF %SYSFUNC(EXIST(&DATASET.)) = 1 %THEN %DO;

	PROC RANK DATA=&DATASET. OUT=AUX_DATASET_RANK GROUPS=&GROUPS;
		RANKS &VAR._RANK;
		VAR &VAR.;
	QUIT;
	
	/*Creating a macro variable with the number of observations (lines) of the dataset*/
	DATA _NULL_; SET &DATASET.;
		CALL SYMPUT('TOT_AUX',_N_);
	RUN;
	
	/*Showing in the log*/
	%PUT TOT_AUX = &TOT_AUX.;
	
	/*Grouping by the RANKS (&VAR._RANK) generated by PROC RANK*/
	PROC SQL;
		CREATE TABLE WORK.AUX_DATASET_SQL AS SELECT
			"&VAR."					 AS VARIABLE LABEL = 'Variable name',
			&VAR._RANK 				 AS RANK	 LABEL = 'Number of the RANK',
			ROUND(MIN(&VAR.),0.001)  AS MIN		 LABEL = 'Minimum value of the original variable per RANK',
			ROUND(MEAN(&VAR.),0.001) AS MEAN	 LABEL = 'Mean value of the original variable per RANK',
			ROUND(MAX(&VAR.),0.001)  AS MAX		 LABEL = 'Maximum value of the original variable per RANK',
			COUNT(*) 				 AS OBS		 LABEL = 'Number of observations per RANK',
			CALCULATED OBS/&TOT_AUX  AS PC_OBS 	 LABEL = 'Percentual of observations per RANK' FORMAT=PERCENT18.2
		FROM AUX_DATASET_RANK
		GROUP BY 1,2;
	QUIT;
	
	/*Be careful with the argument FORCE!*/
	PROC APPEND DATA=WORK.AUX_DATASET_SQL BASE=EBP_APPEND_DESC_STATS FORCE; QUIT;
	
	/*Deleting the datasets*/
	%_EG_CONDITIONAL_DROPDS(AUX_DATASET_RANK, AUX_DATASET_SQL);
	
%END;
%ELSE %DO;
	/*CURIOSITY: the quotation marks ('' or "") work differently in SAS*/
	%PUT MESSAGE = "The database &DATASET. does not exist!";
%END;

%MEND DESC_STATS_WITH_PROC_RANK;

/*Numeric variables only*/
%DESC_STATS_WITH_PROC_RANK(DATASET = ST662LIB.EBP_IRIS, VAR=Petal_Length, GROUPS=10);
%DESC_STATS_WITH_PROC_RANK(DATASET = ST662LIB.EBP_IRIS, VAR=Petal_Width,  GROUPS=10);
%DESC_STATS_WITH_PROC_RANK(DATASET = ST662LIB.EBP_IRIS, VAR=Sepal_Length, GROUPS=10);
%DESC_STATS_WITH_PROC_RANK(DATASET = ST662LIB.EBP_IRIS, VAR=Sepal_Width,  GROUPS=10);

/*
 This kind of macro might be useful when we have
 	1 - A lot of (numeric) variables (e.g. 100, 500, 1000, 2000 etc);
	2 - To analyse concentration/repeated values very quickly;
	3 - To automate the process of variable selection.
*/

/*TYPE=1 denotes numeric*/

PROC CONTENTS DATA=ST662LIB.EBP_IRIS OUT=EBP_CONTENTS(KEEP=NAME TYPE) NOPRINT; QUIT;